{"version":3,"sources":["Components/Anita.js","Components/Counter1.js","Components/Counter.js","Components/Header.js","shared/notes.js","Components/Todoform.js","Components/Newnote.js","App.js","serviceWorker.js","index.js"],"names":["Component","Counter","Header","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","note","color","Newnote","props","handleChange","e","setState","target","value","handleSubmit","preventDefault","state","message","addnote","onSubmit","this","type","name","placeholder","onChange","App","changeName","newname","inc","counter","reset","dec","addNote","Math","floor","random","newnote","clr","notes","NOTES","map","classNames","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.127e2de2.chunk.js","sourcesContent":["import React,{Component}from \"react\";\n\nclass Anita extends Component\n{\n\n\trender()\n\t{\n\treturn(\n\t\t\t<h1>helo {this.props.girl}</h1>\n\t\t\t)\n\t}\n\t\n}\n\nexport default Anita;","import React,{Component} from \"react\";\n\nclass Counter1 extends Component\n{\n\trender()\n\t{\n\t\treturn(\n\t\t\t<h1>{this.props.count}</h1>\n\t\t\t)\n\t}\n}\n\nexport default Counter1;","import React from \"react\";\n\nfunction Counter(props)\n{\n\treturn(\n\t\t<h1>{props.count}</h1>\n\t\t)\n}\nexport default Counter;","import React from \"react\";\n\nconst Header=()=>{\n\treturn(\n\t\t<nav className=\"navbar navbar-expand-lg bg-success\">\n\t\t<a className=\"navbar-brand text-white\" href=\"/\" >Todo App</a>\n\t\t<button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#mycontainer\" \n\t\t\taria-controls=\"mycontainer\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t<span className=\"bars\"></span>\n\t\t\t<span className=\"bars\"></span>\n\t\t\t<span className=\"bars\"></span>\n\t\t</button>\n\t\t<div className=\"collapse navbar-collapse\" id=\"mycontainer\">\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<a className=\"nav-link  text-white\" href=\"/\">Home</a>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<a className=\"nav-link text-white\" href=\"/addtodo\">Add Todo</a>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<a className=\"nav-link text-white\" href=\"/about\">About Us</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\n\t\t</div>\n\t\t</nav>\n\t\t)\n}\n\nexport default Header;","export default [\n\t{\n\t\tnote:\"assignment\",\n\t\tcolor:\"red\"\n\t},\n\t{\n\t\tnote:\"khana\",\n\t\tcolor:\"green\"\n\t\t\n\t}\n];","import React ,{Component}from 'react';\n\nclass Todoform extends Component\n{\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\ttitle:\"\"\n\t\t}\n\t}\n\n\nhandleTitle=(e)=>{\n\tthis.setState({\n\t\ttitle:e.target.value\n\t});\n}\n\nhandleSubmit=(e)=>{\n\te.preventDefault();\n\tthis.props.addtodo(this.state.title);\n\tthis.setState({\n\t\ttitle:\"\"\n\t});\n}\nrender()\n\t{\n\t\treturn(\n\t\t\t<div className=\"form-div w-50 mt-5 text-center\">\n\t\t\t\t<h3>add new todo</h3>\n\t\t\t\t<center>\n\t\t\t\t\t<form className=\"w-75\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<input type=\"text\" name=\"title\" placeholder=\"enter title\"\n\t\t\t\t\t\t className=\"form-control\" value={this.state.title} onChange={this.handleTitle} /><br/>\n\t\t\t\t\t\t <input type=\"submit\" value=\"add todo\" className=\"btn btn-success\"/>\n\t\t\t\t\t</form>\n\t\t\t\t</center>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nexport default Todoform;","import React,{Component} from 'react';\n\nclass Newnote extends Component\n{\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tnote:\"\",\n\t\t\tmessage:\"\"\n\t\t}\n\t}\n\n\thandleChange=(e)=>\n\t{\n\t\tthis.setState(\n\t\t{\n\t\t\tnote:e.target.value\n\t\t});\n\t\t\n\t}\n\n\thandleSubmit=(e)=>{\n\t\te.preventDefault();\n\t\tif(this.state.note===\"\")\n\t\t\tthis.setState({\n\t\t\t\tmessage:\"plz enter a note first\"\n\t\t\t});\n\t\telse{\n\t\tthis.props.addnote(this.state.note);\n\t\tthis.setState({\n\t\t\tnote:\"\",\n\t\t\tmessage:\"\"\n\t\t})}\n\t}\n\n\trender()\n\t{\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<h3 className=\"text-center mt-5\">Add new note</h3>\n\t\t\t\t<center>\n\t\t\t\t\t<form className=\"w-50 \" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<input type=\"text\" name=\"note\" placeholder=\"add new note\" className=\"form-control mt-3\" \n\t\t\t\t\t\tvalue={this.state.note} onChange={this.handleChange}  />\n\t\t\t\t\t\t{this.state.message?<p>{this.state.message}</p>:null}\n\t\t\t\t\t\t<input type=\"submit\" value=\"add new note\" className=\"btn btn-success mt-3\"/>\n\t\t\t\t\t</form>\n\t\t\t\t</center>\n\t\t\t</div>\n\t\t\t)\n\t}\n} \n\nexport default Newnote;","import React,{Component} from 'react';\nimport Anita from \"./Components/Anita.js\";\nimport Counter from \"./Components/Counter.js\";\nimport Counter1 from \"./Components/Counter1.js\";\nimport Header from \"./Components/Header.js\";\nimport TODOS from './shared/Todos.js';\nimport Todoform from \"./Components/Todoform.js\";\nimport \"./App.css\";\nimport NOTES from \"./shared/notes.js\";\nimport Newnote from \"./Components/Newnote.js\";\n\n\nclass App extends Component\n{\n  constructor(props)\n  {\n    super(props);\n    // this.state={\n    //   id:10,\n    //   name:\"Anita\", \n    //    counter:0\n    // };\n\n    // this.state={\n    //   todos:TODOS\n     \n    // }\n    this.state={\n      notes:NOTES,\n      clr:[\"red\",\"blue\",\"green\",\"orange\"]\n    };\n    \n  }\n\n\n\n   changeName=()=>\n  {\n    const newname=this.state.name===\"balwant\"?\"anita\":\"balwant\";\n    this.setState({\n      name:newname\n    });\n  }\n\n  inc=()=>{\n    const counter=this.state.counter+1;\n    this.setState({\n      counter:counter\n    });\n  }\n\n  reset=()=>{\n     this.setState(\n      {\n        counter:0\n      });\n  }\n\n  dec=()=>{ \n    const counter=this.state.counter-1;\n    this.setState(\n      {\n        counter:counter\n      });\n  }\n  // addTodo=(title)=>{\n  //   const id=Math.floor(Math.random()*10000);\n  //   const todo={\n  //     id:id,\n  //     title:title\n  //   }\n  //   this.setState(\n  //   {\n  //     todos:[...this.state.todos,todo]\n  //   }\n\n  //  );\n  // }\n\n  addNote=(note)=>{\n\n    const color=(Math.floor(Math.random()*10000))%4;\n\n    const newnote={\n      note:note,\n      color:this.state.clr[color]\n    }\n    this.setState({\n      notes:[...this.state.notes,newnote]\n    });\n  }\n\n  render()\n  {\n    // const todos=this.state.todos.map(todo =><div className=\"card mt-5 w-50 ml-5\" key={todo.id}>\n    //     <div className=\"card-header bg-info text-white \">{todo.id}</div>\n    //     <div className=\"card-body\">\n    //       <p className=\"text-success text-center\">{todo.title}</p>\n    //     </div>\n\n\n    //   </div>);\n\n    const notes=this.state.notes.map(note =><div className=\"card mt-5 w-50 ml-5\" >\n        <div classNames=\"card-header  text-white\" className={note.color}>{note.note}</div>\n         </div>);\n    return(\n      <>\n      <Header />\n     \n      <Newnote addnote={this.addNote}/>\n      {notes}\n      </>\n      )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}